record-and-playback/matterhorn:
./matterhorn-install.sh       #matterhorn安装脚本
./README
./.gitignore
./webapp
./webapp/bigbluebutton.yml   #配置文件
./webapp/config.ru
./webapp/deploy.sh           #webapp目录中部署工具
./webapp/Gemfile
./webapp/.gitignore
./webapp/main.rb
./webapp/views
./webapp/views/list.haml
./webapp/views/metadata.haml
./webapp/views/login.haml
./webapp/views/layout.haml
./webapp/Gemfile.lock
./scripts #感觉上应该和core目录同级
./scripts/process
./scripts/process/matterhorn.rb#直接执行
./scripts/publish-matterhorn.rb#直接执行此脚本
./scripts/matt-pub-god-conf.rb #复制此文件到/etc/bigbluebutton/god/conf。
#cp matt-pub-god-conf.rb /etc/bigbluebutton/god/conf/matterhorn-publish-conf.rb
#程序默认启动位置：/usr/local/bigbluebutton/core/scripts/
./scripts/ingest-status.rb   #直接执行此脚本，缺失的lib通过gem来安装。
./scripts/matterhorn.yml#配置文件

record-and-playback/slides:
./playback  #将此目录复制到/var/bigbluebutton/
./playback/slides
./playback/slides/logo.png
./playback/slides/playback.html
./playback/slides/lib
./playback/slides/lib/popcorn-complete.min.js
./playback/slides/css
./playback/slides/css/bbb.playback.css
./scripts#感觉上应该和core目录同级
./scripts/process
./scripts/process/slides.rb#直接执行
./scripts/slides.yml#配置文件
./scripts/slides.nginx#逆向代理配置文件
./scripts/publish
./scripts/publish/slides.rb#直接执行

record-and-playback/core:#感觉此目录为核心目录，位置应该在/usr/local/bigbluebutton/下，matterhorn和slides下的scripts目录复制到此目录，其他目录分别有单独的部署存放位置，例如：matterhorn下的webapp在/var/www/bigbluebutton/下，slides下的playback在/var/bigbluebutton/下。
./features
./features/audio_archive.feature
./features/step_definitions
./features/step_definitions/process_video_step.rb
./features/step_definitions/process_matterhorn_step.rb
./features/step_definitions/process_audio_step.rb
./features/step_definitions/audio_archive_step.rb
./features/process_matterhorn.feature
./features/process_video.feature
./features/support
./features/support/env.rb
./features/process_audio.feature
./Gemfile
./god
./god/README
./god/god #复制此目录至/etc/bigbluebutton/
./god/god/god.rb
./god/god/conf
./god/god/conf/README
./god/god/conf/rap-core.rb
./god/initd.god#复制到/etc/init.d/并重命名为god。执行update-rc.d
./lib#record相关源代码。
./lib/recordandplayback.rb
./lib/recordandplayback
./lib/recordandplayback/generators
./lib/recordandplayback/generators/presentation.rb
./lib/recordandplayback/generators/events.rb
./lib/recordandplayback/generators/audio.rb
./lib/recordandplayback/generators/video.rb
./lib/recordandplayback/generators/audio_processor.rb
./lib/recordandplayback/generators/matterhorn_processor.rb
./lib/recordandplayback/presentation_archiver.rb
./lib/recordandplayback/video_archiver.rb
./lib/recordandplayback/events_archiver.rb
./lib/recordandplayback/audio_archiver.rb
./lib/recordandplayback/deskshare_archiver.rb
./Gemfile.lock
./spec#好象是另一部分源代码。
./spec/spec_helper.rb
./spec/recordandplayback
./spec/recordandplayback/audio_processor_spec.rb
./spec/recordandplayback/video_stubbed_archiver_spec.rb
./spec/recordandplayback/events_spec.rb
./spec/recordandplayback/presentation_stubbed_archiver_spec.rb
./spec/recordandplayback/deskshare_generator_spec.rb
./spec/recordandplayback/presentation_processor_spec.rb
./spec/recordandplayback/deskshare_stubbed_archiver_spec.rb
./spec/recordandplayback/audio_archiver_spec.rb
./spec/recordandplayback/events_archiver_spec.rb
./scripts#感觉上matterhorn和slides目录中的scripts应复制到此处。
./scripts/bbb-rap.sh
./scripts/process
./scripts/process/README
./scripts/bigbluebutton.yml#录制的视频/音频存放位置等相关配置。
./scripts/rap-worker.rb
./scripts/archive
./scripts/archive/archive.rb
./scripts/cleanup.rb
./scripts/publish
./scripts/publish/README
./resources#感觉上应该是测试录屏或者是录屏结果的目录.



Matterhorn安装：
 #matterhorn prepare
    apt-get install subversion
    svn checkout https://opencast.jira.com/svn/MH/tags/1.3.1 /opt/matterhorn/matterhorn_1.3.1
    sudo apt-get install maven2
    #set JAVA_HOME
    #felix framework
    wget http://archive.apache.org/dist/felix/org.apache.felix.main.distribution-3.2.2.tar.gz
    tar xvf org.apache.felix.main.distribution-3.2.2.tar.gz
    mv felix-framework-3.2.2 /opt/matterhorn/felix
    mkdir /opt/matterhorn/felix/load
    cp -rf /opt/matterhorn/matterhorn_1.3.1/docs/felix/* /opt/matterhorn/felix/
  #matterhorn config
    vi /opt/matterhorn/felix/conf/config.properties
      org.opencastproject.server.url=http://<the URL of your server with port>
      org.opencastproject.storage.dir=/opt/matterhorn/content
    vi /opt/matterhorn/felix/load/org.opencastproject.organization-mh_default_org.cfg
      server=<the URL of your server without port>
      port=<the port you are running matterhorn on>
  #matterhorn build
    export MAVEN_OPTS='-Xms256m -Xmx960m -XX:PermSize=64m -XX:MaxPermSize=256m'
    cd /opt/matterhorn/matterhorn_1.3.1
    mvn clean install -DdeployTo=/opt/matterhorn/felix/matterhorn
    cd /opt/matterhorn/matterhorn_1.3.1/docs/scripts/3rd_party
    <Read README file for additional instructions>
  #matterhorn run
    echo "export M2_REPO=/home/$USER/.m2/repository" >> ~/.bashrc
    echo "export FELIX_HOME=/opt/matterhorn/felix" >> ~/.bashrc
    echo "export JAVA_OPTS='-Xms1024m -Xmx1024m -XX:MaxPermSize=256m'" >> ~/.bashrc
    source ~/.bashrc
    sh /opt/matterhorn/felix/bin/start_matterhorn.sh
  #matterhorn stop
    sh /opt/matterhorn/felix/bin/shutdown_matterhorn.sh
  #matterhorn view
    Browse http://localhost:8080
  #matterhorn run as service
    cp /opt/matterhorn/matterhorn_1.3.1/docs/felix/bin/matterhorn_init_d.sh /etc/init.d/matterhorn
    update-rc.d matterhorn defaults 99
    #如果启动用户非root需要修改/etc/init.d/matterhorn
    MATTERHORN_USER="matterhorn"


####修改BBB配置
  vi /usr/share/red5/webapps/video/WEB-INF/red5-web.xml
  vi /usr/share/red5/webapps/deskshare/WEB-INF/red5-web.xml
  #分别修改如下内容
  <property name="recordVideoStream" value="true"/>
  <constructor-arg index="0" value="true"/>
  service red5 restart(or $RED5_HOME>./red5.sh &)

####ruby库准备
gem install  builder -v 2.1.2
gem install  diff-lcs -v 1.1.2
gem install  json -v 1.4.6
gem install  term-ansicolor -v 1.0.5
gem install  gherkin -v 2.2.9
gem install  cucumber -v 0.9.2
gem install  curb -v 0.7.15
gem install  mime-types -v 1.16
gem install  nokogiri -v 1.4.4
gem install  open4 -v 1.3
gem install  rack -v 1.2.2
gem install  redis -v 2.1.1
gem install  redis-namespace -v 0.10.0
gem install  tilt -v 1.2.2
gem install  sinatra -v 1.2.1
gem install  vegas -v 0.1.8
gem install  resque -v 1.15.0
gem install  rspec-core -v 2.0.0
gem install  rspec-expectations -v 2.0.0
gem install  rspec-mocks -v 2.0.0
gem install  rspec -v 2.0.0
gem install  rubyzip -v 0.9.4
gem install  streamio-ffmpeg -v 0.7.8
gem install  trollop -v 1.16.2

####程序安装
  #cd /bigbluebutton/record-and-playback
  mkdir build
  cp -r slides/scripts build/
  cp -r matterhorn/scripts build/
  cp -r core/scripts build/
  cp -r core/lib build/
  cp -r build /usr/local/bigbluebutton/core

  cp -R core/god/god /etc/bigbluebutton/
  cp matterhorn/scripts/matt-pub-god-conf.rb /etc/bigbluebutton/god/conf/matterhorn-publish-conf.rb
  cp core/god/initd.god /etc/init.d/god
  chmod +x /etc/init.d/god
  update-rc.d -f god defaults
  service god start

  cp -r slides/playback /var/bigbluebutton
  cp slides/scripts/slides.nginx /etc/bigbluebutton/nginx/

  cd matterhorn/webapp/
  * The matterhorn webapp requires:
    sudo apt-get install ruby1.8-dev
    sudo apt-get install libxml2
    sudo apt-get install libxml2-dev
    sudo apt-get install libxslt-dev
  * Install bundler and execute for get the required gems:
    sudo gem install bundler
    sudo bundle install
    sudo thin install
    update-rc.d -f thin defaults
  ./deploy.sh
  service thin start
  echo "        location /matterhorn/ {
          proxy_pass              http://127.0.0.1:3000/;
          proxy_redirect          default;
      }">/etc/bigbluebutton/nginx/matterhorn.nginx

  vi /var/www/bigbluebutton/matterhorn/bigbluebutton.yml
  #修改bbb_salt和bbb_url配置项
  vi /usr/local/bigbluebutton/core/scripts/matterhorn.yml
  #修改server和key配置项

  vi /usr/local/bigbluebutton/core/scripts/slides.yml
  #修改playback_host配置项

  vi /usr/local/bigbluebutton/core/scripts/bigbluebutton.yml
  #修改scripts_dir配置项


  ####bbb通过ssh和matterhorn通讯，所以需要生成ssh钥
    ssh-keygen -t rsa
    cp ~/.ssh/id_rsa /usr/local/bigbluebutton/core/scripts/matt_id_rsa
    chmod 600 /usr/local/bigbluebutton/core/scripts/matt_id_rsa
    chown tomcat6:tomcat6 /usr/local/bigbluebutton/core/scripts/matt_id_rsa
    #In Matterhorn server 
    #将matt_id_rsa的内容追加到/root/.ssh/authorized_keys中。
    #test
    sudo -su tomcat6 ssh -i /usr/local/bigbluebutton/core/scripts/matt_id_rsa  -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o CheckHostIP=no root@localhost 'ls /opt/matterhorn/felix/'

